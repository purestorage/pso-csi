# Service defined here, plus serviceName below in StatefulSet,
# are needed only because of condition explained in
# https://github.com/kubernetes/kubernetes/issues/69608
kind: Service
apiVersion: v1
metadata:
  name: pso-csi-controller
  labels:
    app: pso-csi-controller
spec:
  selector:
    app: pso-csi-controller
  ports:
    - name: dummy
      port: 12345
    - name: csiport
      port: 5556
---
# Why does this need to be a statefulset?
# Because we need only one copy of the controller running
kind: StatefulSet
apiVersion: {{ template "statefulset.apiVersion" . }}
metadata:
  name: pso-csi-controller
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "pure-csi.labels" . | indent 4}}

spec:
  serviceName: "pso-csi-controller"
  replicas: 1
  selector:
    matchLabels:
      app: pso-csi-controller
  template:
    metadata:
      labels:
        app: pso-csi-controller
{{ include "pure-csi.labels" . | indent 8}}
    spec:
      serviceAccountName: {{ .Values.clusterrolebinding.serviceAccount.name }}
      {{ if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.application.pullSecrets }}
      - name: {{ .name }}
      {{- end }}
      containers:
        - name: pso-csi-container
          image: "{{ .Values.images.plugin.name }}:{{ .Values.images.plugin.tag }}"
          imagePullPolicy: {{ .Values.images.plugin.pullPolicy }}
          command:
            - "/csi-server"
            - "-endpoint=$(CSI_ENDPOINT)"
            - "-nodeid=$(KUBE_NODE_NAME)"
            - "-servertype=controller"
            - "-certpath=$(PURE_CSI_CERTS_DIR)"
            - "-certfilename=$(PURE_CSI_CERT_FILE)"
            - "-keyfilename=$(PURE_CSI_KEY_FILE)"
            - "-rpcport=$(PURE_RPC_PORT)"
{{- if eq .Values.app.debug true}}
            - "-debug"
{{- end}}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: config
              mountPath: /etc/pure
              readOnly: true
            - name: certs
              mountPath: /cockroach/cockroach-certs
            - name: csi-certs
              mountPath: /csi-certs
            - name: configmap-volume
              mountPath: /etc/config
          env:
          - name: K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CSI_ENDPOINT
            value: unix:///csi/csi.sock
          - name: PURE_DISCOVERY_CONF
            value: /etc/pure/pure.json
          - name: PURE_K8S_NAMESPACE
            value: {{ .Values.clusterID }}
          - name: PURE_DEFAULT_BLOCK_FS_TYPE
            value: {{ .Values.flasharray.defaultFSType }}
          - name: PURE_DEFAULT_ENABLE_FB_NFS_SNAPSHOT
            value: {{ quote .Values.flashblade.snapshotDirectoryEnabled }}
          - name: PURE_DATASTORE_HOST
            value: {{ printf "pso-db-public.%s" .Release.Namespace }}
          - name: PURE_DATASTORE_CERTS_DIR
            value: /cockroach/cockroach-certs
          - name: PURE_CSI_CERTS_DIR
            value: /csi-certs
          - name: PURE_CSI_CERT_FILE
            value: rpc.crt
          - name: PURE_CSI_KEY_FILE
            value: rpc.key
          # Port for remote machine to access RPC, certificate will be enabled by default.
          - name: PURE_RPC_PORT
            value: "5556"
          - name: PURE_FLASHARRAY_SAN_TYPE
            value: {{ .Values.flasharray.sanType | upper }}
          securityContext:
            privileged: true
          ports:
          - containerPort: 9899
            name: healthz
            protocol: TCP
          # We want both a liveness and readiness probe: the readiness probe will prevent Helm from thinking it's ready
          # too early, and the liveness probe will restart the pod if it gets too far gone.
          livenessProbe:
            failureThreshold: 100
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 50
            timeoutSeconds: 3
            periodSeconds: 2
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
        # This is the external provisioner sidecar
        - name: csi-provisioner
          {{- with .Values.images.csi.provisioner }}
          image: {{ .name | default "quay.io/k8scsi/csi-provisioner" }}:v1.6.0
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          args:
            - --csi-address=/csi/csi.sock
            - --feature-gates=Topology={{ .Values.storagetopology.enable }}
{{- if and .Values.storagetopology.strictTopology .Values.storagetopology.enable}}
            - --strict-topology
{{- end}}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
# Google Anthos (which is built on GKE) prohibits alpha snapshotters
        - name: csi-snapshotter
          {{- with .Values.images.csi.snapshotter }}
          image: {{ .name | default "quay.io/k8scsi/csi-snapshotter" }}:v2.1.1
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          args:
            - "--csi-address=/csi/csi.sock"
            - "--leader-election=false"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-attacher
          {{- with .Values.images.csi.attacher }}
          image: {{ .name | default "quay.io/k8scsi/csi-attacher" }}:v2.2.0
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          args:
            - "--csi-address=/csi/csi.sock"
            - "--timeout=15s"
            - "--leader-election=false"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
# The csi-resizer sidecar that watches the Kubernetes API server for PersistentVolumeClaim updates.
# Does not scale with more replicas, only one is elected as leader and running.
        - name: csi-resizer
          {{- with .Values.images.csi.resizer }}
          image: {{ .name | default "quay.io/k8scsi/csi-resizer" }}:v0.5.0
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          args:
            - "--csi-address=/csi/csi.sock"
            - "--csiTimeout=15s"
            - "--leader-election=false"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: liveness-probe
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          {{- with .Values.images.csi.livenessProbe }}
          image: {{ .name | default "quay.io/k8scsi/livenessprobe" }}:v2.0.0
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          args:
          - --csi-address=/csi/csi.sock
          - --probe-timeout=3s
          - --health-port=9899
          - --v=0
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: config
          secret:
            secretName: pure-provisioner-secret
        - name: certs
          secret:
            secretName: pso-cockroach-client-certs
            defaultMode: 0600
        - name: csi-certs
          secret:
            secretName: pso-csi-server-certs
            defaultMode: 0600
        - name: configmap-volume
          configMap:
            name: pure-csi-container-configmap
    {{- with .Values.controllerServer.nodeSelector | default .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.controllerServer.affinity | default .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.controllerServer.tolerations | default .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
